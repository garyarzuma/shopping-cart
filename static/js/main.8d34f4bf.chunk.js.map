{"version":3,"sources":["components/Home.js","images/color-block-hoodie.jpg","images/bubblegum-block-hoodie.jpg","context/cart-context.js","components/Hoodies.js","components/Products.js","components/Nav.js","components/Cart.js","Routes.js","index.js"],"names":["Home","CartContext","createContext","initialState","carts","qty","name","price","url","colorBlockHoodie","bubblegum","reducer","state","action","type","tempCart","forEach","element","index","payload","filter","cart","Error","CartContextProvider","props","useReducer","dispatch","Provider","value","children","Hoodies","useContext","src","imgSrc","alt","className","onClick","Products","map","hoodie","Nav","to","Cart","cartArray","cartItem","Routes","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"kMAUeA,EARF,WACX,OACE,8BACE,oD,OCLS,MAA0B,+CCA1B,MAA0B,mDCI5BC,EAAcC,0BAErBC,EAAe,CACnBC,MAAO,CACL,CAAEC,IAAK,EAAGC,KAAM,qBAAsBC,MAAO,GAAIC,IAAKC,GACtD,CAAEJ,IAAK,EAAGC,KAAM,yBAA0BC,MAAO,GAAIC,IAAKE,KAIxDC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,WACH,IAAIC,EAAWH,EAAMR,MAMrB,OALAQ,EAAMR,MAAMY,SAAQ,SAACC,EAASC,GACxBD,EAAQX,OAASO,EAAOM,SAC1BJ,EAASG,GAAOb,SAGb,CACLD,MAAOW,GAEX,IAAK,WACH,MAAO,CACLX,MAAOQ,EAAMR,MAAMgB,QAAO,SAACC,GAAD,OAAUA,EAAKf,OAASO,EAAOM,YAE7D,QACE,MAAM,IAAIG,QAIHC,EAAsB,SAACC,GAAW,IAAD,EAClBC,qBAAWd,EAASR,GADF,mBACrCS,EADqC,KAC9Bc,EAD8B,KAG5C,OACE,cAACzB,EAAY0B,SAAb,CAAsBC,MAAO,CAAChB,EAAOc,GAArC,SACGF,EAAMK,YCdEC,EAtBC,SAACN,GAAW,IAAD,EACCO,qBAAW9B,GADZ,mBACXyB,GADW,WAUzB,OACE,gCACE,qBAAKM,IAAKR,EAAMS,OAAQC,IAAKV,EAAMlB,KAAM6B,UAAU,iBACnD,qBAAKA,UAAU,cAAf,SAA8BX,EAAMlB,OACpC,sBAAK6B,UAAU,eAAf,cAAgCX,EAAMjB,SACtC,wBAAQ4B,UAAU,eAAeC,QAZnB,WAChBV,EAAS,CACPZ,KAAM,WACNK,QAASK,EAAMlB,QASf,6BCIS+B,EAlBE,WAAO,IAAD,EACLN,qBAAW9B,GAApBW,EADc,oBAGrB,OACE,gCACE,qDACCA,EAAMR,MAAMkC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEN,OAAQM,EAAO/B,IACfD,MAAOgC,EAAOhC,MACdD,KAAMiC,EAAOjC,MAHRiC,EAAOjC,aCUPkC,EAnBH,WACV,OACE,gCACE,sCACA,qBAAIL,UAAU,YAAd,UACE,cAAC,IAAD,CAAMM,GAAG,IAAT,SACE,wCAEF,cAAC,IAAD,CAAMA,GAAG,YAAT,SACE,4CAEF,cAAC,IAAD,CAAMA,GAAG,QAAT,SACE,+CCQKC,EApBF,WAAO,IAAD,EACDX,qBAAW9B,GAErB0C,EAHW,oBAGOvC,MAAMkC,KAAI,SAACM,GACjC,GAAIA,EAASvC,IAAM,EACjB,OACE,gCACGuC,EAAStC,KADZ,KACoBsC,EAASvC,MADnBuC,EAAStC,SAMzB,OACE,gCACE,iDACCqC,MCOQE,EAjBA,WACb,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,KAAK,IAAIC,OAAK,EAACC,UAAWhD,IACjC,cAAC,IAAD,CAAO8C,KAAK,YAAYE,UAAWX,IACnC,cAAC,IAAD,CAAOS,KAAK,QAAQE,UAAWN,e,MCT3CO,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.8d34f4bf.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Hello from Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/color-block-hoodie.a167314b.jpg\";","export default __webpack_public_path__ + \"static/media/bubblegum-block-hoodie.3a09b524.jpg\";","import React, { useReducer, createContext } from \"react\";\nimport colorBlockHoodie from \"../images/color-block-hoodie.jpg\";\nimport bubblegum from \"../images/bubblegum-block-hoodie.jpg\";\n\nexport const CartContext = createContext();\n\nconst initialState = {\n  carts: [\n    { qty: 0, name: \"Color Block Hoodie\", price: 85, url: colorBlockHoodie },\n    { qty: 0, name: \"Bubblegum Block Hoodie\", price: 79, url: bubblegum },\n  ],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_CART\": //This is not great because Reducers need to be Pure...\n      let tempCart = state.carts;\n      state.carts.forEach((element, index) => {\n        if (element.name === action.payload) {\n          tempCart[index].qty++;\n        }\n      });\n      return {\n        carts: tempCart,\n      };\n    case \"DEL_CART\":\n      return {\n        carts: state.carts.filter((cart) => cart.name !== action.payload),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const CartContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <CartContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { CartContext } from \"../context/cart-context\";\n\nconst Hoodies = (props) => {\n  const [state, dispatch] = useContext(CartContext);\n\n  const addToCart = () => {\n    dispatch({\n      type: \"ADD_CART\",\n      payload: props.name,\n    });\n  };\n\n  return (\n    <div>\n      <img src={props.imgSrc} alt={props.name} className=\"hoodie-image\"></img>\n      <div className=\"hoodie-name\">{props.name}</div>\n      <div className=\"hoodie-price\">${props.price}</div>\n      <button className=\"add-cart-btn\" onClick={addToCart}>\n        Add to Cart\n      </button>\n    </div>\n  );\n};\n\nexport default Hoodies;\n","import Hoodies from \"./Hoodies\";\nimport React, { useContext } from \"react\";\nimport { CartContext } from \"../context/cart-context\";\n\nconst Products = () => {\n  const [state] = useContext(CartContext);\n\n  return (\n    <div>\n      <h1>Hello from Products</h1>\n      {state.carts.map((hoodie) => (\n        <Hoodies\n          key={hoodie.name}\n          imgSrc={hoodie.url}\n          price={hoodie.price}\n          name={hoodie.name}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav>\n      <h3>Logo</h3>\n      <ul className=\"nav-links\">\n        <Link to=\"/\">\n          <li>Home</li>\n        </Link>\n        <Link to=\"/products\">\n          <li>Products</li>\n        </Link>\n        <Link to=\"/cart\">\n          <li>Cart</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useContext } from \"react\";\nimport { CartContext } from \"../context/cart-context\";\n\nconst Cart = () => {\n  const [state] = useContext(CartContext);\n\n  const cartArray = state.carts.map((cartItem) => {\n    if (cartItem.qty > 0) {\n      return (\n        <div key={cartItem.name}>\n          {cartItem.name} x{cartItem.qty}\n        </div>\n      );\n    }\n  });\n  return (\n    <div>\n      <h1>Hello from Cart</h1>\n      {cartArray}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Products from \"./components/Products\";\nimport Nav from \"./components/Nav\";\nimport Cart from \"./components/Cart\";\nimport { CartContextProvider } from \"./context/cart-context\";\n\nconst Routes = () => {\n  return (\n    <CartContextProvider>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/products\" component={Products} />\n            <Route path=\"/cart\" component={Cart} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </CartContextProvider>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\nimport \"./styles/App.css\";\n\n/*Removed the react.strictmode since it was running reducer twice which\nwas a problem since my reducer wasn't pure since I was changing the qty paramter\nNeed to change this in the future*/\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}